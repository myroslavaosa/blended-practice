{"version":3,"file":"index.js","sources":["../src/js/refs.js","../src/main.js"],"sourcesContent":["export const refs = {\n    form: document.querySelector('.login-form'),\n    emailInfo: document.querySelector('[name=\"email\"]'),\n    passwordInfo: document.querySelector('[name=\"password\"]'),\n    btn: document.querySelector('[name=\"button\"]'),\n};\n","// Перед вами форма для авторизації на сайті (правильні дані для входу збережені в обʼєкті USER_DATA)\n\n// Розбийте код на кілька файлів:\n// storage.js - функції для роботи зі сховищем;\n// refs.js - посилання на всі потрібні елементи в html;\n// main.js - головний файл, де вся основна логіка додатка.\n// Ви маєте додати перевірку введених даних при сабміті:\n// Якщо введені дані не збігаються зі збереженими, викликайте аlert і\n// повідомляйте про помилку.\n\n// Якщо імейл і пароль користувача збігаються, зберігайте дані з форми\n// у локальне сховище і змінюйте кнопку Login на Logout, також робіть поля введення\n// недоступними для змін.\n// При перезавантаженні сторінки, якщо користувач авторизован, ми маємо бачити logout-кнопку\n// та недоступні для зміни поля з даними користувача.\n// Клік по кнопці logout повертає все до початкового вигляду і видаляє дані користувача\n// з локального сховища.\n\nimport { stringify } from \"postcss\";\nimport { refs } from \"./js/refs\";\n\nconst USER_DATA = {\n  email: 'user@mail.com',\n  password: 'secret',\n};\n\nconst LS_KEY = 'userdata';\n\nrefs.form.addEventListener('submit', (e) => {\n  e.preventDefault();\n  const emailInput = refs.emailInfo.value.trim();\n  const passwordInput = refs.passwordInfo.value.trim();\n  if (emailInput === \"\" || passwordInput === \"\") {\n    alert('Pls put something it!');\n    return;\n  }\n  if (emailInput !== USER_DATA.email || passwordInput !== USER_DATA.password) {\n        alert('Wrong password or email!')\n    return;\n  }\n  localStorage.setItem(LS_KEY, JSON.stringify({ email: emailInput, password: passwordInput }))\n  refs.btn.textContent = 'Logout';\n  refs.emailInfo.setAttribute('readonly', true);\n  refs.passwordInfo.setAttribute('readonly', true);\n\n})"],"names":["refs","USER_DATA","LS_KEY","e","emailInput","passwordInput"],"mappings":"0uBAAO,MAAMA,EAAO,CAChB,KAAM,SAAS,cAAc,aAAa,EAC1C,UAAW,SAAS,cAAc,gBAAgB,EAClD,aAAc,SAAS,cAAc,mBAAmB,EACxD,IAAK,SAAS,cAAc,iBAAiB,CACjD,ECgBMC,EAAY,CAChB,MAAO,gBACP,SAAU,QACZ,EAEMC,EAAS,WAEfF,EAAK,KAAK,iBAAiB,SAAWG,GAAM,CAC1CA,EAAE,eAAc,EAChB,MAAMC,EAAaJ,EAAK,UAAU,MAAM,KAAI,EACtCK,EAAgBL,EAAK,aAAa,MAAM,KAAI,EAClD,GAAII,IAAe,IAAMC,IAAkB,GAAI,CAC7C,MAAM,uBAAuB,EAC7B,MACD,CACD,GAAID,IAAeH,EAAU,OAASI,IAAkBJ,EAAU,SAAU,CACtE,MAAM,0BAA0B,EACpC,MACD,CACD,aAAa,QAAQC,EAAQ,KAAK,UAAU,CAAE,MAAOE,EAAY,SAAUC,CAAa,CAAE,CAAC,EAC3FL,EAAK,IAAI,YAAc,SACvBA,EAAK,UAAU,aAAa,WAAY,EAAI,EAC5CA,EAAK,aAAa,aAAa,WAAY,EAAI,CAEjD,CAAC"}